name: Cong - Pipeline versioning test

on:
  workflow_dispatch:
    inputs:
      branchName:
        description: "Branch name to run pipeline against"
        required: true
        default: "develop"
  push:
    branches: [ "main", "develop", "hotfix/*" ]
  pull_request:
    branches: [ "*" ]

jobs:
  version_build:
    permissions:
        contents: write
    runs-on: ubuntu-latest
        
    steps:     
    - name: Checkout branch
      uses: actions/checkout@v4
      # with:
      #   token: ${{ secrets.GITHUB_TOKEN }}
  
    - name: Print event name
      run: |          
        echo "event_name: ${{ github.event_name }}"

    - name: Get branch name
      id: branch-names
      uses: tj-actions/branch-names@v8

    - name: Generate Date-Based Version
      id: version
      run: |
        # Get the current date in YYYYMMDD format
        DATE=$(date +'%Y%m%d')
        YEAR=${DATE:0:4}          # Year: first 4 characters
        MONTH=$((10#${DATE:4:2})) # Month: next 2 characters and remove leading zero from month (e.g. 05 -> 5)
        DAY=$((10#${DATE:6:2}))   # Day: last 2 characters and remove leading zero from day (e.g. 09 -> 9)
        VERSION="${YEAR}.${MONTH}.${DAY}.${GITHUB_RUN_NUMBER}"

        # Get the branch name
        BRANCH_NAME='${{ steps.branch-names.outputs.current_branch }}'
        
        # Check if the ref is a pull request
        PR_NUMBER=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; /^refs\/pull/ { print $3 }')

        # Determine version type and base version
        if [ "$BRANCH_NAME" = "main" ] || [[ "$BRANCH_NAME" == hotfix* ]]; then
          VERSION_TYPE="stable"
        elif [[ "$BRANCH_NAME" == release/* ]]; then
          VERSION_TYPE="rc"
        elif [ "$BRANCH_NAME" = "develop" ]; then
          VERSION_TYPE="beta"
          VERSION="${VERSION}-${VERSION_TYPE}"
        elif [ -n "$PR_NUMBER" ]; then
          VERSION_TYPE="pr"
          VERSION="${VERSION}-${VERSION_TYPE}-${PR_NUMBER}"
        else
          SAFE_BRANCH=$(echo "$BRANCH_NAME" | tr -cd '[:alnum:]-')
          VERSION_TYPE="branch"
          VERSION="${VERSION}-${VERSION_TYPE}-${SAFE_BRANCH}"
        fi
        echo "version_type=$VERSION_TYPE" >> $GITHUB_ENV
        echo "version=$VERSION" >> $GITHUB_ENV
        
    - name: Tag the commit with the version
      run: |
        git tag ${{ env.version }}
        git push origin ${{ env.version }}        
