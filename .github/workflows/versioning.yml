name: Cong - Pipeline versioning test

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "*" ]

jobs:
  version_build:
    runs-on: ubuntu-latest
        
    steps:         
    - name: Generate Date-Based Version
      id: version
      run: |
        # Get the current date in YYYYMMDD format - test
        DATE=$(date +'%Y%m%d')
        
        # Get the branch name
        BRANCH_NAME=${GITHUB_REF##*/}
        
        # Check if the ref is a pull request
        PR_NUMBER=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; /^refs\/pull/ { print $3 }')

        # Determine version type and base version
        if [ "$BRANCH_NAME" = "main" ] || [[ "$BRANCH_NAME" == hotfix* ]]; then
          VERSION_TYPE="stable"
          VERSION="${VERSION_TYPE}-${DATE}"
        elif [ "$BRANCH_NAME" = "develop" ]; then
          VERSION_TYPE="beta"
          VERSION="${VERSION_TYPE}-${DATE}"
        elif [ -n "$PR_NUMBER" ]; then
          # If it's a pull request, prefix with "pr-" and include the PR number
          VERSION_TYPE="pr"
          VERSION="${VERSION_TYPE}-${PR_NUMBER}"
        else
          # Sanitize branch name to remove special characters
          SAFE_BRANCH=$(echo "$BRANCH_NAME" | tr -cd '[:alnum:]-')
          VERSION="${SAFE_BRANCH}"
          VERSION_TYPE="branch"
        fi
        
        # Append GitHub run number to the version
        VERSION="${VERSION}.${GITHUB_RUN_NUMBER}"

        echo "Generated Version: $VERSION"
        echo "version_type=$VERSION_TYPE" >> $GITHUB_ENV
        echo "version=$VERSION" >> $GITHUB_ENV

    - name: Tag the commit with the version
      run: |
        git tag ${{ env.version }}
        git push origin ${{ env.version }}        
